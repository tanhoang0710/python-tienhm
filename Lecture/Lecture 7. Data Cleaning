{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Vu9KAwcLVnz8"},"source":["# 1.&nbsp;Cleaning cơ bản"]},{"cell_type":"markdown","metadata":{"id":"Zqr7VHNXVnz8"},"source":["## 1.1. Chọn cột\n","Khi phân tích, chỉ nên lấy ra những cột cần dùng và có ý nghĩa. 2 cách thực hiện: liệt kê những cột cần dùng và xoá những cột không cần."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QcPHlSb0Vnz8"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A_3tyIvLVnz9","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1688775490914,"user_tz":-420,"elapsed":305,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}},"outputId":"578fc4e0-46e5-4bbd-f97f-b6150402bc35"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   year month_name    month commodity  profit company\n","0  2020        Jan  2020-01      Fish    7415  Pandas\n","1  2020        Jan  2020-01    Shrimp    3239  Pandas\n","2  2020        Jun  2020-06      Fish    7280  Pandas\n","3  2020        Jun  2020-06    Shrimp    2007  Pandas\n","4  2020        Jul  2020-07      Fish    3574  Pandas\n","5  2020        Jul  2020-07    Shrimp    9285  Pandas"],"text/html":["\n","  <div id=\"df-479e378a-43a2-41a3-855a-a8638b642207\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>month_name</th>\n","      <th>month</th>\n","      <th>commodity</th>\n","      <th>profit</th>\n","      <th>company</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020</td>\n","      <td>Jan</td>\n","      <td>2020-01</td>\n","      <td>Fish</td>\n","      <td>7415</td>\n","      <td>Pandas</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020</td>\n","      <td>Jan</td>\n","      <td>2020-01</td>\n","      <td>Shrimp</td>\n","      <td>3239</td>\n","      <td>Pandas</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020</td>\n","      <td>Jun</td>\n","      <td>2020-06</td>\n","      <td>Fish</td>\n","      <td>7280</td>\n","      <td>Pandas</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020</td>\n","      <td>Jun</td>\n","      <td>2020-06</td>\n","      <td>Shrimp</td>\n","      <td>2007</td>\n","      <td>Pandas</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020</td>\n","      <td>Jul</td>\n","      <td>2020-07</td>\n","      <td>Fish</td>\n","      <td>3574</td>\n","      <td>Pandas</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2020</td>\n","      <td>Jul</td>\n","      <td>2020-07</td>\n","      <td>Shrimp</td>\n","      <td>9285</td>\n","      <td>Pandas</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-479e378a-43a2-41a3-855a-a8638b642207')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-479e378a-43a2-41a3-855a-a8638b642207 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-479e378a-43a2-41a3-855a-a8638b642207');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}],"source":["df_aqua = pd.DataFrame({\n","    'year': pd.Series([2020, 2020, 2020, 2020, 2020, 2020]),\n","    'month_name': pd.Series(['Jan', 'Jan', 'Jun', 'Jun', 'Jul', 'Jul']),\n","    'month': pd.Series(['2020-01', '2020-01', '2020-06', '2020-06', '2020-07', '2020-07']),\n","    'commodity': pd.Series(['Fish', 'Shrimp', 'Fish', 'Shrimp', 'Fish', 'Shrimp']),\n","    'profit': pd.Series([7415, 3239, 7280, 2007, 3574, 9285]),\n","    'company': pd.Series(['Pandas', 'Pandas', 'Pandas', 'Pandas', 'Pandas', 'Pandas'])\n","})\n","df_aqua"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1xhyYb9iVnz9","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1688775621214,"user_tz":-420,"elapsed":293,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}},"outputId":"98a04fda-cc16-4c28-b820-db65ce6cebc6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     month commodity  profit\n","0  2020-01      Fish    7415\n","1  2020-01    Shrimp    3239\n","2  2020-06      Fish    7280\n","3  2020-06    Shrimp    2007\n","4  2020-07      Fish    3574\n","5  2020-07    Shrimp    9285"],"text/html":["\n","  <div id=\"df-0d2af4e9-d586-441d-82e7-247abdc74ae2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>month</th>\n","      <th>commodity</th>\n","      <th>profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-01</td>\n","      <td>Fish</td>\n","      <td>7415</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-01</td>\n","      <td>Shrimp</td>\n","      <td>3239</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-06</td>\n","      <td>Fish</td>\n","      <td>7280</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-06</td>\n","      <td>Shrimp</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-07</td>\n","      <td>Fish</td>\n","      <td>3574</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2020-07</td>\n","      <td>Shrimp</td>\n","      <td>9285</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d2af4e9-d586-441d-82e7-247abdc74ae2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0d2af4e9-d586-441d-82e7-247abdc74ae2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0d2af4e9-d586-441d-82e7-247abdc74ae2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}],"source":["# df_aqua.drop(columns=['year', 'month_name', 'company'])\n","df_aqua[['month', 'commodity', 'profit']]"]},{"cell_type":"markdown","metadata":{"id":"KFhmOjlKVnz-"},"source":["## 1.2. Đổi tên cột\n","Tên cột trong bảng nên tuân theo quy tắc đặt tên biến trong Python. Chuẩn đặt tên phổ biến nhất là `snake_case`, ngoài ra một số dự án cũng dùng `camelCase` và `PascalCase`."]},{"cell_type":"markdown","source":["♈ **Coding Session 1**\n","\n","```python\n","df_aqua = pd.DataFrame({\n","    'Month': pd.Series(['2020-06', '2020-06', '2020-07', '2020-07']),\n","    'Product_Name': pd.Series(['Fish', 'Shrimp', 'Fish', 'Shrimp']),\n","    'PROFIT': pd.Series([7280, 2007, 3574, 9285]),\n","    'Company Name': pd.Series(['Pandas', 'Pandas', 'Pandas', 'Pandas'])\n","})\n","```"],"metadata":{"id":"FXlXHf-wKln9"}},{"cell_type":"code","source":[],"metadata":{"id":"IptUGTFAKiZP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"PjfeAjIzVn0B"},"source":["## 1.3. Chuyển đổi dtype"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ExmUNhUNVn0B"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"markdown","source":["♈ **Coding Session 2**\n","\n","```python\n","df_customer = pd.DataFrame({\n","    'register_date': [20191103, 20190812, 20200125, 20200129, 20200412],\n","    'name': ['Wayne', 'Robert', 'Ashley', 'Jamie', 'Jessie'],\n","    'is_male': [True, True, False, True, False],\n","    'dob': ['2000-07-20', '1974-12-14', '1978-08-12', '1993-03-03', '1984-01-19'],\n","})\n","```\n","\n","- Trong dataframe trên, xác định những trường có dtype chưa hợp lý\n","- Chuyển đổi về các dtype phù hợp"],"metadata":{"id":"vZWpDACoXp6H"}},{"cell_type":"code","source":[],"metadata":{"id":"H3VPc_JwY9oA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Q_G6ZQAk5bID"},"source":["## 1.4. Mapping"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jplGERbJVn0M"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aDOQkQkhVn0M","outputId":"5137d898-2c68-476a-ed1d-79d1816d777e","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1688835104100,"user_tz":-420,"elapsed":298,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  student_id  grade  gender\n","0     010001      1    Male\n","1     030001      3  Female\n","2     070001      7  Female\n","3     080001      8  Female\n","4     110001     11    Male\n","5     120001     12  Female"],"text/html":["\n","  <div id=\"df-da7d9f34-7e07-4c81-940b-5aa911784688\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>student_id</th>\n","      <th>grade</th>\n","      <th>gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>010001</td>\n","      <td>1</td>\n","      <td>Male</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>030001</td>\n","      <td>3</td>\n","      <td>Female</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>070001</td>\n","      <td>7</td>\n","      <td>Female</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>080001</td>\n","      <td>8</td>\n","      <td>Female</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>110001</td>\n","      <td>11</td>\n","      <td>Male</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>120001</td>\n","      <td>12</td>\n","      <td>Female</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da7d9f34-7e07-4c81-940b-5aa911784688')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-da7d9f34-7e07-4c81-940b-5aa911784688 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-da7d9f34-7e07-4c81-940b-5aa911784688');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}],"source":["df_student = pd.DataFrame({\n","    'student_id': ['010001', '030001', '070001', '080001', '110001', '120001'],\n","    'grade': [1, 3, 7, 8, 11, 12],\n","    'gender': ['Male', 'Female', 'Female', 'Female', 'Male', 'Female']\n","})\n","df_student"]},{"cell_type":"markdown","metadata":{"id":"gCOnguYJVn0N"},"source":["### Dùng dictionary"]},{"cell_type":"code","source":["map_gender = {'Male': 1, 'Female': 0}\n","\n","df = df_student.copy()\n","df['is_male'] = df['gender'].map(map_gender)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"THzhBRP2azjN","executionInfo":{"status":"ok","timestamp":1688835368154,"user_tz":-420,"elapsed":436,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}},"outputId":"6583d698-86b6-4a2d-82d3-37e3b9f2bd3c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  student_id  grade  gender  is_male\n","0     010001      1    Male        1\n","1     030001      3  Female        0\n","2     070001      7  Female        0\n","3     080001      8  Female        0\n","4     110001     11    Male        1\n","5     120001     12  Female        0"],"text/html":["\n","  <div id=\"df-b6c04b20-55fd-4100-bdb1-c24bb6cdab3c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>student_id</th>\n","      <th>grade</th>\n","      <th>gender</th>\n","      <th>is_male</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>010001</td>\n","      <td>1</td>\n","      <td>Male</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>030001</td>\n","      <td>3</td>\n","      <td>Female</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>070001</td>\n","      <td>7</td>\n","      <td>Female</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>080001</td>\n","      <td>8</td>\n","      <td>Female</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>110001</td>\n","      <td>11</td>\n","      <td>Male</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>120001</td>\n","      <td>12</td>\n","      <td>Female</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6c04b20-55fd-4100-bdb1-c24bb6cdab3c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b6c04b20-55fd-4100-bdb1-c24bb6cdab3c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b6c04b20-55fd-4100-bdb1-c24bb6cdab3c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","metadata":{"id":"kC4_gcPAVn0N"},"source":["### Dùng function"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0_QdXuE_Vn0N"},"outputs":[],"source":["def map_stage(grade):\n","    if grade in range(1, 6):\n","        stage = 'Primary'\n","    elif grade in range(6, 10):\n","        stage = 'Secondary'\n","    elif grade in range(10, 13):\n","        stage = 'High'\n","    else:\n","        stage = None\n","    return stage"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ufFcOQJ7Vn0O","outputId":"ebc5fae8-661e-494c-be33-89c1641122e9","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1688835576611,"user_tz":-420,"elapsed":281,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  student_id  grade  gender      stage\n","0     010001      1    Male    Primary\n","1     030001      3  Female    Primary\n","2     070001      7  Female  Secondary\n","3     080001      8  Female  Secondary\n","4     110001     11    Male       High\n","5     120001     12  Female       High"],"text/html":["\n","  <div id=\"df-ef31880c-5b83-4e6c-9fb7-1da4a9bfd942\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>student_id</th>\n","      <th>grade</th>\n","      <th>gender</th>\n","      <th>stage</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>010001</td>\n","      <td>1</td>\n","      <td>Male</td>\n","      <td>Primary</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>030001</td>\n","      <td>3</td>\n","      <td>Female</td>\n","      <td>Primary</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>070001</td>\n","      <td>7</td>\n","      <td>Female</td>\n","      <td>Secondary</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>080001</td>\n","      <td>8</td>\n","      <td>Female</td>\n","      <td>Secondary</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>110001</td>\n","      <td>11</td>\n","      <td>Male</td>\n","      <td>High</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>120001</td>\n","      <td>12</td>\n","      <td>Female</td>\n","      <td>High</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef31880c-5b83-4e6c-9fb7-1da4a9bfd942')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ef31880c-5b83-4e6c-9fb7-1da4a9bfd942 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ef31880c-5b83-4e6c-9fb7-1da4a9bfd942');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":31}],"source":["df = df_student.copy()\n","df['stage'] = df['grade'].map(map_stage)\n","df"]},{"cell_type":"markdown","source":["♈ **Case Study 3**\n","\n","```python\n","df_customer = pd.DataFrame({\n","    'customer_id': pd.Series(['FB1539', 'GG2223', 'EM5325', 'FB0038']),\n","    'name': pd.Series(['Jack', 'Amy', 'Andrea', 'Gareth']),\n","    'birth_year': pd.Series([1988, 1993, 1954, 2002]),\n","})\n","```\n","\n","Cho bảng thông tin khách hàng như trên. Sử dụng mapping để tạo cột mới `register_via` (KH đăng ký bằng email hay tài khoản mạng xã hội), dựa trên 2 ký tự đầu tiên của `customer_id` theo quy tắc: `FB` là `Facebook`, `GG` là `Google`, `EM` là `Email`."],"metadata":{"id":"3yaH0op7eayy"}},{"cell_type":"markdown","metadata":{"id":"t6XPRnZhVn0O"},"source":["# 2.&nbsp;Xử lý text\n","[Documentation](https://pandas.pydata.org/docs/user_guide/text.html) - Các phương thức xử lý text trong Pandas."]},{"cell_type":"markdown","metadata":{"id":"9eLD4YrvVn0O"},"source":["## 2.1. Khoảng trắng\n","Do thói quen người nhập, các cột văn bản (text) có thể:\n","- Có dấu cách ở đầu hoặc cuối\n","- Dùng nhiều dấu cách giữa các từ\n","- Xuống dòng"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OU0fTOkNVn0O"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"n5t7WJ6vVn0P","outputId":"04f51fd0-ff19-4c44-ceca-bf6ebfc2b1a7","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1688895511059,"user_tz":-420,"elapsed":853,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   year                country  export  import\n","0  2017       United\\nKingdom     5466    1546\n","1  2018         United Kingdom    8558    3546\n","2  2019     United     Kingdom    8435    2007\n","3  2020   United  Kingdom   \\n    8435    3574"],"text/html":["\n","  <div id=\"df-efab522a-e1b2-411d-9bc5-f6f053c598c5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>country</th>\n","      <th>export</th>\n","      <th>import</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017</td>\n","      <td>United\\nKingdom</td>\n","      <td>5466</td>\n","      <td>1546</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018</td>\n","      <td>United Kingdom</td>\n","      <td>8558</td>\n","      <td>3546</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019</td>\n","      <td>United     Kingdom</td>\n","      <td>8435</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020</td>\n","      <td>United  Kingdom   \\n</td>\n","      <td>8435</td>\n","      <td>3574</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efab522a-e1b2-411d-9bc5-f6f053c598c5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-efab522a-e1b2-411d-9bc5-f6f053c598c5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-efab522a-e1b2-411d-9bc5-f6f053c598c5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}],"source":["df_trade = pd.DataFrame({\n","    'year': pd.Series([2017, 2018, 2019, 2020]),\n","    'country': pd.Series(['United\\nKingdom ', '  United Kingdom', 'United\\tKingdom   ', ' United  Kingdom   \\n']),\n","    'export': pd.Series([5466, 8558, 8435, 8435]),\n","    'import': pd.Series([1546, 3546, 2007, 3574])\n","})\n","df_trade"]},{"cell_type":"code","source":["df = df_trade.copy()\n","df['country'] = df['country'].str.split().str.join(' ')\n","df['country'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fYxcn4LOFeCj","executionInfo":{"status":"ok","timestamp":1688898237509,"user_tz":-420,"elapsed":297,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}},"outputId":"37eb43d7-13e1-4e96-9291-b7bc8ac30d02"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['United Kingdom'], dtype=object)"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"Dq8BdbmLVn0Q"},"source":["## 2.2. Sửa lỗi chính tả"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SX3TclTNVn0Q"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HbvkGozlVn0Q","outputId":"8188acc6-5e66-43ce-f885-c5e66577d586","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1688898303745,"user_tz":-420,"elapsed":388,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         date                   commodity  price    unit\n","0  2020-01-01   Shrimp, frozen, chem free     10  usd/kg\n","1  2020-01-02  Shrimp, frz, chemical-free     13  USD/KG\n","2  2020-01-03   Prawn, frz, chemical-free     14  USD/kg"],"text/html":["\n","  <div id=\"df-40ce4700-04aa-42e5-b24b-aa88fb086c58\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>commodity</th>\n","      <th>price</th>\n","      <th>unit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-01-01</td>\n","      <td>Shrimp, frozen, chem free</td>\n","      <td>10</td>\n","      <td>usd/kg</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-01-02</td>\n","      <td>Shrimp, frz, chemical-free</td>\n","      <td>13</td>\n","      <td>USD/KG</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-01-03</td>\n","      <td>Prawn, frz, chemical-free</td>\n","      <td>14</td>\n","      <td>USD/kg</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40ce4700-04aa-42e5-b24b-aa88fb086c58')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-40ce4700-04aa-42e5-b24b-aa88fb086c58 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-40ce4700-04aa-42e5-b24b-aa88fb086c58');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}],"source":["df_shrimp = pd.DataFrame({\n","    'date': ['2020-01-01', '2020-01-02', '2020-01-03'],\n","    'commodity': ['Shrimp, frozen, chem free', 'Shrimp, frz, chemical-free', 'Prawn, frz, chemical-free'],\n","    'price': [10, 13, 14],\n","    'unit': ['usd/kg', 'USD/KG', 'USD/kg']\n","})\n","df_shrimp"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"k4PTVimjVn0Q","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1688898359593,"user_tz":-420,"elapsed":313,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}},"outputId":"4f3e96c5-1d27-42a9-faff-e043ccca71e6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         date                      commodity  price    unit\n","0  2020-01-01  Shrimp, frozen, chemical-free     10  USD/kg\n","1  2020-01-02  Shrimp, frozen, chemical-free     13  USD/kg\n","2  2020-01-03  Shrimp, frozen, chemical-free     14  USD/kg"],"text/html":["\n","  <div id=\"df-e14fbc6d-af42-4148-a186-8bd388f8910e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>commodity</th>\n","      <th>price</th>\n","      <th>unit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-01-01</td>\n","      <td>Shrimp, frozen, chemical-free</td>\n","      <td>10</td>\n","      <td>USD/kg</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-01-02</td>\n","      <td>Shrimp, frozen, chemical-free</td>\n","      <td>13</td>\n","      <td>USD/kg</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-01-03</td>\n","      <td>Shrimp, frozen, chemical-free</td>\n","      <td>14</td>\n","      <td>USD/kg</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e14fbc6d-af42-4148-a186-8bd388f8910e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e14fbc6d-af42-4148-a186-8bd388f8910e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e14fbc6d-af42-4148-a186-8bd388f8910e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}],"source":["df = df_shrimp.copy()\n","df['commodity'] = df['commodity'].str.replace('Prawn', 'Shrimp')\n","df['commodity'] = df['commodity'].str.replace('frz', 'frozen')\n","df['commodity'] = df['commodity'].str.replace('chem free', 'chemical-free')\n","df['unit'] = df['unit'].str.replace('usd', 'USD')\n","df['unit'] = df['unit'].str.replace('KG', 'kg')\n","df"]},{"cell_type":"markdown","source":["## 2.3. Pattern"],"metadata":{"id":"sfx819Fnp9rZ"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd"],"metadata":{"id":"W_hVQP4up74e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_cus = pd.DataFrame({\n","    'name': ['Alice', 'Bob', 'Charlie', 'Dave', 'Ellen', 'Frank'],\n","    'age': [24, 42, 18, 68, 24, 30],\n","    'state': ['NY', 'CA', 'CA', 'TX', 'CA', 'NY'],\n","    'point': [64, 92, 70, 70, 88, 57],\n","})"],"metadata":{"id":"-pHkNHgSp_po"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["mask = df_cus['name'].isin(['Bod', 'Dave'])\n","mask = df_cus['name'].str.contains('c')\n","mask = df_cus['name'].str.contains('c', case=False)\n","# mask = df_cus['name'].str.contains('c|n')\n","\n","df_cus[mask]"],"metadata":{"id":"Wcz6Oa8HqBGN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_cus['name'].str.replace('i.*e', '-', regex=True)"],"metadata":{"id":"-E4wARRRqCyB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"o0CClAXiVn0U"},"source":["# 3.&nbsp;Xử lý datetime\n","Ký hiệu|Ý nghĩa                         |Ví dụ                               |\n",":------|:-------------------------------|:-----------------------------------|\n","`%a`   |Tên ngày trong tuần, viết tắt   |Mon, Tue, Wed,...                   |\n","`%A`   |Tên ngày trong tuần, viết đầy đủ|Monday, Tuesday, Wednesday,...      |\n","`%b`   |Tên tháng, viết tắt             |Jan, Feb, Mar,...                   |\n","`%B`   |Tên tháng, viết đầy đủ          |January, February, March,...        |\n","`%d`   |Ngày trong tháng, 2 chữ số      |01, 02, 03,..., 31                  |\n","`%m`   |Tháng, 2 chữ số                 |01, 02, 03,..., 12                  |\n","`%y`   |Năm, 2 chữ số                   |00, 01, 02,..., 99                  |\n","`%Y`   |Năm, 4 chữ số                   |0001, 0002,..., 2019, 2020,..., 9999|\n","`%W`   |Tuần trong năm, 2 chữ số        |00, 01, 02,..., 53                  |\n","`%H`   |Giờ, hệ 24h, 2 chữ số           |00, 01, 02,..., 23                  |\n","`%I`   |Giờ, hệ 12h, 2 chữ số           |01, 02, 03,..., 12                  |\n","`%p`   |Buổi (sáng/chiều)               |AM, PM                              |\n","`%M`   |Phút, 2 chữ số                  |00, 01, 02,..., 59                  |\n","`%S`   |Giây, 2 chữ số                  |00, 01, 02,..., 59                  |"]},{"cell_type":"markdown","metadata":{"id":"yfpocmb_Vn0V"},"source":["## 3.1. Format tiêu chuẩn\n","Định dạng chuẩn của dữ liệu **date** là `YYYY-MM-DD` và của **datetime** là `YYYY-MM-DD HH:MM:SS`, với dtype `datetime64`. Được dùng để trích xuất các thuộc tính của thời gian như ngày, giờ, tháng, năm,..."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Sh92rT-sVn0V"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_nsUFn-HVn0V","outputId":"384b2e9b-205d-4ad0-8d0c-34246412fe0c","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1688953827794,"user_tz":-420,"elapsed":4,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         date  profit\n","0  2020.01.01     134\n","1  2020.01.02     185\n","2  2020.01.03     206"],"text/html":["\n","  <div id=\"df-93b95a9b-a44a-405c-837f-2e5b962d16b9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020.01.01</td>\n","      <td>134</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020.01.02</td>\n","      <td>185</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020.01.03</td>\n","      <td>206</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93b95a9b-a44a-405c-837f-2e5b962d16b9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-93b95a9b-a44a-405c-837f-2e5b962d16b9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-93b95a9b-a44a-405c-837f-2e5b962d16b9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}],"source":["df_sale = pd.DataFrame({\n","    'date': ['2020.01.01', '2020.01.02', '2020.01.03'],\n","    'profit': [134, 185, 206],\n","})\n","df_sale"]},{"cell_type":"code","source":["# df_sale['date'].astype('datetime64') # not recommended\n","pd.to_datetime(df_sale['date'], format='%Y.%m.%d')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ynciFbF99tQB","executionInfo":{"status":"ok","timestamp":1688923687475,"user_tz":-420,"elapsed":403,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}},"outputId":"753be4be-43fd-4b2c-c466-f804bceb30cf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0   2020-01-01\n","1   2020-01-02\n","2   2020-01-03\n","Name: date, dtype: datetime64[ns]"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["⚡ **Attention**\n","\n","Khi chuyển đổi dữ liệu dạng text về datetime, nên dùng hàm `pd.to_datetime()` thay vì method `astype()`."],"metadata":{"id":"BUZZRirlBA9l"}},{"cell_type":"markdown","source":["♈ **Case Study 4**\n","\n","Tìm ra các cột ngày tháng trong tập dữ liệu [Youtube Trending](https://raw.githubusercontent.com/hungpq7/data-chilly/main/data/youtube_trending.csv) và chuyển đổi chúng về dtype datetime."],"metadata":{"id":"1h8eVxlPa0AU"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","df_youtube = pd.read_csv('https://raw.githubusercontent.com/hungpq7/data-chilly/main/data/youtube_trending.csv')\n","df_youtube['trending_date'] = pd.to_datetime(df_youtube['trending_date'], format='%Y-%m-%d')\n","df_youtube['publish_time'] = pd.to_datetime(df_youtube['publish_time'], format='%Y-%m-%d %H:%M:%S')\n","df_youtube.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Jchxa7sYFw-M","executionInfo":{"status":"ok","timestamp":1688969676410,"user_tz":-420,"elapsed":309,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}},"outputId":"d54823a6-09ce-4d23-8999-d37ce19c8dd0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["video_id                     object\n","trending_date        datetime64[ns]\n","channel_title                object\n","category_id                   int64\n","publish_time         datetime64[ns]\n","views                         int64\n","likes                         int64\n","dislikes                      int64\n","comment_count                 int64\n","comments_disabled             int64\n","ratings_disabled              int64\n","category_name                object\n","dtype: object"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":[],"metadata":{"id":"RtGunzcwcHfr"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"MxN8auCVVn0Y"},"source":["## 3.2. Thuộc tính thời gian"]},{"cell_type":"markdown","source":["### Periodic\n","Các thuộc tính **periodic** (còn được gọi là [date component]) là các thành phần số nguyên (ngày, giờ, tháng, năm,...) trong định dạng datetime tiêu chuẩn. Có tính tuần hoàn, lặp đi lặp lại.\n","\n","[date component]: https://pandas.pydata.org/docs/user_guide/timeseries.html#time-date-components"],"metadata":{"id":"h-lIxkcMo7gj"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"aCs621FvVn0Y"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ri6DeqmvVn0Y","outputId":"502c2559-bcd8-43be-a99e-fb335fce599c","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1688956460006,"user_tz":-420,"elapsed":355,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    date  quarter  month  day  hour  minute  second   weekday  \\\n","0    2019-09-01 00:00:00        3      9    1     0       0       0    Sunday   \n","1    2019-09-01 01:12:01        3      9    1     1      12       1    Sunday   \n","2    2019-09-01 02:24:02        3      9    1     2      24       2    Sunday   \n","3    2019-09-01 03:36:03        3      9    1     3      36       3    Sunday   \n","4    2019-09-01 04:48:04        3      9    1     4      48       4    Sunday   \n","...                  ...      ...    ...  ...   ...     ...     ...       ...   \n","3635 2020-02-29 19:00:35        1      2   29    19       0      35  Saturday   \n","3636 2020-02-29 20:12:36        1      2   29    20      12      36  Saturday   \n","3637 2020-02-29 21:24:37        1      2   29    21      24      37  Saturday   \n","3638 2020-02-29 22:36:38        1      2   29    22      36      38  Saturday   \n","3639 2020-02-29 23:48:39        1      2   29    23      48      39  Saturday   \n","\n","     month_name  \n","0     September  \n","1     September  \n","2     September  \n","3     September  \n","4     September  \n","...         ...  \n","3635   February  \n","3636   February  \n","3637   February  \n","3638   February  \n","3639   February  \n","\n","[3640 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-2d39ecb5-d26a-4f38-9d59-c44de1b2ea3d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>quarter</th>\n","      <th>month</th>\n","      <th>day</th>\n","      <th>hour</th>\n","      <th>minute</th>\n","      <th>second</th>\n","      <th>weekday</th>\n","      <th>month_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019-09-01 00:00:00</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Sunday</td>\n","      <td>September</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019-09-01 01:12:01</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>Sunday</td>\n","      <td>September</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-09-01 02:24:02</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>24</td>\n","      <td>2</td>\n","      <td>Sunday</td>\n","      <td>September</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019-09-01 03:36:03</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>36</td>\n","      <td>3</td>\n","      <td>Sunday</td>\n","      <td>September</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019-09-01 04:48:04</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>48</td>\n","      <td>4</td>\n","      <td>Sunday</td>\n","      <td>September</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3635</th>\n","      <td>2020-02-29 19:00:35</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>29</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>35</td>\n","      <td>Saturday</td>\n","      <td>February</td>\n","    </tr>\n","    <tr>\n","      <th>3636</th>\n","      <td>2020-02-29 20:12:36</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>29</td>\n","      <td>20</td>\n","      <td>12</td>\n","      <td>36</td>\n","      <td>Saturday</td>\n","      <td>February</td>\n","    </tr>\n","    <tr>\n","      <th>3637</th>\n","      <td>2020-02-29 21:24:37</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>29</td>\n","      <td>21</td>\n","      <td>24</td>\n","      <td>37</td>\n","      <td>Saturday</td>\n","      <td>February</td>\n","    </tr>\n","    <tr>\n","      <th>3638</th>\n","      <td>2020-02-29 22:36:38</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>29</td>\n","      <td>22</td>\n","      <td>36</td>\n","      <td>38</td>\n","      <td>Saturday</td>\n","      <td>February</td>\n","    </tr>\n","    <tr>\n","      <th>3639</th>\n","      <td>2020-02-29 23:48:39</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>29</td>\n","      <td>23</td>\n","      <td>48</td>\n","      <td>39</td>\n","      <td>Saturday</td>\n","      <td>February</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3640 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2d39ecb5-d26a-4f38-9d59-c44de1b2ea3d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2d39ecb5-d26a-4f38-9d59-c44de1b2ea3d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2d39ecb5-d26a-4f38-9d59-c44de1b2ea3d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}],"source":["df = pd.DataFrame({'date': pd.date_range('2019-09-01', '2020-03-01', freq='4321s')})\n","\n","df['quarter'] = df['date'].dt.quarter\n","df['month'] = df['date'].dt.month\n","df['day'] = df['date'].dt.day\n","\n","df['hour'] = df['date'].dt.hour\n","df['minute'] = df['date'].dt.minute\n","df['second'] = df['date'].dt.second\n","\n","df['weekday'] = df['date'].dt.day_name()\n","df['month_name'] = df['date'].dt.month_name()\n","\n","df"]},{"cell_type":"markdown","source":["♈ **Case Study 5**\n","\n","Từ 2000 đến 2004, sử dụng Pandas để liệt kê những ngày là Thứ 6 - Ngày 13."],"metadata":{"id":"w8g21biO9Yth"}},{"cell_type":"code","source":["df = pd.DataFrame({'date': pd.date_range('2000-01-01', '2004-12-31', freq='1D')})\n","df['day'] = df['date'].dt.day\n","df['weekday'] = df['date'].dt.day_name()\n","mask = (df['day'] == 13) & (df['weekday'] == 'Friday')\n","df[mask]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"KMLeBIEP8j9b","executionInfo":{"status":"ok","timestamp":1688978697508,"user_tz":-420,"elapsed":347,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}},"outputId":"c9033ece-0093-44f9-b6ad-8c2d672e05e9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           date  day weekday\n","286  2000-10-13   13  Friday\n","468  2001-04-13   13  Friday\n","559  2001-07-13   13  Friday\n","986  2002-09-13   13  Friday\n","1077 2002-12-13   13  Friday\n","1259 2003-06-13   13  Friday\n","1504 2004-02-13   13  Friday\n","1686 2004-08-13   13  Friday"],"text/html":["\n","  <div id=\"df-809645cf-1e24-4613-9b4f-f7670b5d0a03\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>day</th>\n","      <th>weekday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>286</th>\n","      <td>2000-10-13</td>\n","      <td>13</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>468</th>\n","      <td>2001-04-13</td>\n","      <td>13</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>559</th>\n","      <td>2001-07-13</td>\n","      <td>13</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>986</th>\n","      <td>2002-09-13</td>\n","      <td>13</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>1077</th>\n","      <td>2002-12-13</td>\n","      <td>13</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>1259</th>\n","      <td>2003-06-13</td>\n","      <td>13</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>1504</th>\n","      <td>2004-02-13</td>\n","      <td>13</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>1686</th>\n","      <td>2004-08-13</td>\n","      <td>13</td>\n","      <td>Friday</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-809645cf-1e24-4613-9b4f-f7670b5d0a03')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-809645cf-1e24-4613-9b4f-f7670b5d0a03 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-809645cf-1e24-4613-9b4f-f7670b5d0a03');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":78}]},{"cell_type":"markdown","metadata":{"id":"sUNJoMogVn0W"},"source":["### Non-periodic\n","Các thuộc tính **non-periodic** (còn được gọi là [date offset]) là ngày tháng đã được làm tròn.\n","\n","[date offset]: https://pandas.pydata.org/docs/user_guide/timeseries.html#dateoffset-objects"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"k_i2EMhSVn0X"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","source":["df = pd.DataFrame({'date': pd.date_range('2019-09-01', '2020-03-01', freq='4321s')})\n","\n","df['year'] = df['date'].dt.to_period('Y')\n","df['quarter'] = df['date'].dt.to_period('Q')\n","df['month'] = df['date'].dt.to_period('M')\n","df['week'] = df['date'].dt.to_period('W')\n","df['hour'] = df['date'].dt.to_period('H')\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"dDOsLrYQpHRw","executionInfo":{"status":"ok","timestamp":1688961935127,"user_tz":-420,"elapsed":319,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}},"outputId":"19c1a50f-159b-4f7d-80cf-212651c2e8f6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    date  year quarter    month                   week  \\\n","0    2019-09-01 00:00:00  2019  2019Q3  2019-09  2019-08-26/2019-09-01   \n","1    2019-09-01 01:12:01  2019  2019Q3  2019-09  2019-08-26/2019-09-01   \n","2    2019-09-01 02:24:02  2019  2019Q3  2019-09  2019-08-26/2019-09-01   \n","3    2019-09-01 03:36:03  2019  2019Q3  2019-09  2019-08-26/2019-09-01   \n","4    2019-09-01 04:48:04  2019  2019Q3  2019-09  2019-08-26/2019-09-01   \n","...                  ...   ...     ...      ...                    ...   \n","3635 2020-02-29 19:00:35  2020  2020Q1  2020-02  2020-02-24/2020-03-01   \n","3636 2020-02-29 20:12:36  2020  2020Q1  2020-02  2020-02-24/2020-03-01   \n","3637 2020-02-29 21:24:37  2020  2020Q1  2020-02  2020-02-24/2020-03-01   \n","3638 2020-02-29 22:36:38  2020  2020Q1  2020-02  2020-02-24/2020-03-01   \n","3639 2020-02-29 23:48:39  2020  2020Q1  2020-02  2020-02-24/2020-03-01   \n","\n","                  hour  \n","0     2019-09-01 00:00  \n","1     2019-09-01 01:00  \n","2     2019-09-01 02:00  \n","3     2019-09-01 03:00  \n","4     2019-09-01 04:00  \n","...                ...  \n","3635  2020-02-29 19:00  \n","3636  2020-02-29 20:00  \n","3637  2020-02-29 21:00  \n","3638  2020-02-29 22:00  \n","3639  2020-02-29 23:00  \n","\n","[3640 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-efee81c2-9bf0-4cc9-a5fd-f571f1a17bbb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>quarter</th>\n","      <th>month</th>\n","      <th>week</th>\n","      <th>hour</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019-09-01 00:00:00</td>\n","      <td>2019</td>\n","      <td>2019Q3</td>\n","      <td>2019-09</td>\n","      <td>2019-08-26/2019-09-01</td>\n","      <td>2019-09-01 00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019-09-01 01:12:01</td>\n","      <td>2019</td>\n","      <td>2019Q3</td>\n","      <td>2019-09</td>\n","      <td>2019-08-26/2019-09-01</td>\n","      <td>2019-09-01 01:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-09-01 02:24:02</td>\n","      <td>2019</td>\n","      <td>2019Q3</td>\n","      <td>2019-09</td>\n","      <td>2019-08-26/2019-09-01</td>\n","      <td>2019-09-01 02:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019-09-01 03:36:03</td>\n","      <td>2019</td>\n","      <td>2019Q3</td>\n","      <td>2019-09</td>\n","      <td>2019-08-26/2019-09-01</td>\n","      <td>2019-09-01 03:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019-09-01 04:48:04</td>\n","      <td>2019</td>\n","      <td>2019Q3</td>\n","      <td>2019-09</td>\n","      <td>2019-08-26/2019-09-01</td>\n","      <td>2019-09-01 04:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3635</th>\n","      <td>2020-02-29 19:00:35</td>\n","      <td>2020</td>\n","      <td>2020Q1</td>\n","      <td>2020-02</td>\n","      <td>2020-02-24/2020-03-01</td>\n","      <td>2020-02-29 19:00</td>\n","    </tr>\n","    <tr>\n","      <th>3636</th>\n","      <td>2020-02-29 20:12:36</td>\n","      <td>2020</td>\n","      <td>2020Q1</td>\n","      <td>2020-02</td>\n","      <td>2020-02-24/2020-03-01</td>\n","      <td>2020-02-29 20:00</td>\n","    </tr>\n","    <tr>\n","      <th>3637</th>\n","      <td>2020-02-29 21:24:37</td>\n","      <td>2020</td>\n","      <td>2020Q1</td>\n","      <td>2020-02</td>\n","      <td>2020-02-24/2020-03-01</td>\n","      <td>2020-02-29 21:00</td>\n","    </tr>\n","    <tr>\n","      <th>3638</th>\n","      <td>2020-02-29 22:36:38</td>\n","      <td>2020</td>\n","      <td>2020Q1</td>\n","      <td>2020-02</td>\n","      <td>2020-02-24/2020-03-01</td>\n","      <td>2020-02-29 22:00</td>\n","    </tr>\n","    <tr>\n","      <th>3639</th>\n","      <td>2020-02-29 23:48:39</td>\n","      <td>2020</td>\n","      <td>2020Q1</td>\n","      <td>2020-02</td>\n","      <td>2020-02-24/2020-03-01</td>\n","      <td>2020-02-29 23:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3640 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efee81c2-9bf0-4cc9-a5fd-f571f1a17bbb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-efee81c2-9bf0-4cc9-a5fd-f571f1a17bbb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-efee81c2-9bf0-4cc9-a5fd-f571f1a17bbb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["♈ **Case Study 6**\n","\n","Trong dữ liệu [Youtube Trending], thống kê số lượng video được ra mắt mỗi năm.\n","\n","[Youtube Trending]: https://raw.githubusercontent.com/hungpq7/data-chilly/main/data/youtube_trending.csv"],"metadata":{"id":"RcdP1MtA0N7J"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","df_youtube = pd.read_csv('https://raw.githubusercontent.com/hungpq7/data-chilly/main/data/youtube_trending.csv')\n","df_youtube['trending_date'] = pd.to_datetime(df_youtube['trending_date'], format='%Y-%m-%d')\n","df_youtube['publish_time'] = pd.to_datetime(df_youtube['publish_time'], format='%Y-%m-%d %H:%M:%S')\n","\n","df = df_youtube.copy()\n","df['publish_quarter'] = df['publish_time'].dt.to_period('Y')\n","df = df.groupby('video_id')['publish_quarter'].min().reset_index()\n","df.groupby('publish_quarter').size().to_frame()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"Y2UgpwtL2WXp","executionInfo":{"status":"ok","timestamp":1688978120906,"user_tz":-420,"elapsed":331,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}},"outputId":"f2a555f1-adb6-41a3-e8ea-4f30afc7408f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    0\n","publish_quarter      \n","2008                2\n","2009                3\n","2010                1\n","2011                5\n","2012                5\n","2013                4\n","2014                4\n","2015                4\n","2016                6\n","2017             2044"],"text/html":["\n","  <div id=\"df-d4e9a212-28bc-44db-a8a1-dce21763fa1a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","    <tr>\n","      <th>publish_quarter</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2008</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2009</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2010</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2011</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2012</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2013</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2014</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2015</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2016</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>2044</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4e9a212-28bc-44db-a8a1-dce21763fa1a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d4e9a212-28bc-44db-a8a1-dce21763fa1a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d4e9a212-28bc-44db-a8a1-dce21763fa1a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":[],"metadata":{"id":"HzVwxX6T7JEJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"x5m9rY_AVn0Z"},"source":["## 3.3. Timedelta\n","Nếu datetime mô tả **thời điểm** thì timedelta mô tả **khoảng thời gian**."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kbD3WaK9Vn0Z"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","source":["df = pd.DataFrame({\n","    'start_date': pd.date_range('2018-01-01', freq='100H', periods=5),\n","    'end_date': pd.date_range('2018-02-01', freq='3D', periods=5),\n","})\n","\n","df['duration'] = df['end_date'] - df['start_date']\n","df['duration_in_days'] = df['duration'].dt.days\n","df['duration_in_seconds'] = df['duration'].dt.total_seconds()\n","df['extended_end_date'] = df['end_date'] + pd.Timedelta('3D')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"iTBVAbarG6rl","executionInfo":{"status":"ok","timestamp":1688966502755,"user_tz":-420,"elapsed":366,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}},"outputId":"ce09c71f-823a-4632-ae3a-bff7da27d487"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           start_date   end_date         duration  duration_in_days  \\\n","0 2018-01-01 00:00:00 2018-02-01 31 days 00:00:00                31   \n","1 2018-01-05 04:00:00 2018-02-04 29 days 20:00:00                29   \n","2 2018-01-09 08:00:00 2018-02-07 28 days 16:00:00                28   \n","3 2018-01-13 12:00:00 2018-02-10 27 days 12:00:00                27   \n","4 2018-01-17 16:00:00 2018-02-13 26 days 08:00:00                26   \n","\n","   duration_in_seconds extended_end_date  \n","0            2678400.0        2018-02-04  \n","1            2577600.0        2018-02-07  \n","2            2476800.0        2018-02-10  \n","3            2376000.0        2018-02-13  \n","4            2275200.0        2018-02-16  "],"text/html":["\n","  <div id=\"df-e96f4d81-fef6-46d6-9964-f230923c27b7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>start_date</th>\n","      <th>end_date</th>\n","      <th>duration</th>\n","      <th>duration_in_days</th>\n","      <th>duration_in_seconds</th>\n","      <th>extended_end_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-01-01 00:00:00</td>\n","      <td>2018-02-01</td>\n","      <td>31 days 00:00:00</td>\n","      <td>31</td>\n","      <td>2678400.0</td>\n","      <td>2018-02-04</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-01-05 04:00:00</td>\n","      <td>2018-02-04</td>\n","      <td>29 days 20:00:00</td>\n","      <td>29</td>\n","      <td>2577600.0</td>\n","      <td>2018-02-07</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-01-09 08:00:00</td>\n","      <td>2018-02-07</td>\n","      <td>28 days 16:00:00</td>\n","      <td>28</td>\n","      <td>2476800.0</td>\n","      <td>2018-02-10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018-01-13 12:00:00</td>\n","      <td>2018-02-10</td>\n","      <td>27 days 12:00:00</td>\n","      <td>27</td>\n","      <td>2376000.0</td>\n","      <td>2018-02-13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018-01-17 16:00:00</td>\n","      <td>2018-02-13</td>\n","      <td>26 days 08:00:00</td>\n","      <td>26</td>\n","      <td>2275200.0</td>\n","      <td>2018-02-16</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e96f4d81-fef6-46d6-9964-f230923c27b7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e96f4d81-fef6-46d6-9964-f230923c27b7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e96f4d81-fef6-46d6-9964-f230923c27b7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":55}]},{"cell_type":"markdown","source":["♈ **Case Study 7**\n","\n","Từ dữ liệu [Youtube Trending], hãy tính ra thời gian bắt đầu lên trending của mỗi video.\n","\n","[Youtube Trending]: https://raw.githubusercontent.com/hungpq7/data-chilly/main/data/youtube_trending.csv"],"metadata":{"id":"TrmZcF5KO7to"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","df_youtube = pd.read_csv('https://raw.githubusercontent.com/hungpq7/data-chilly/main/data/youtube_trending.csv')\n","df_youtube['trending_date'] = pd.to_datetime(df_youtube['trending_date'], format='%Y-%m-%d')\n","df_youtube['publish_time'] = pd.to_datetime(df_youtube['publish_time'], format='%Y-%m-%d %H:%M:%S')\n","\n","df = df_youtube.copy()\n","df['time_to_trend'] = (df['trending_date'] - df['publish_time'])\n","df = df.groupby('video_id')['time_to_trend'].min().reset_index()\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"OklVYXxkCVW5","executionInfo":{"status":"ok","timestamp":1688983000851,"user_tz":-420,"elapsed":515,"user":{"displayName":"Phạm Quang Hưng","userId":"05531971174725887265"}},"outputId":"1c7664b8-155f-4d74-8fc4-bf8369d3dd1d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         video_id      time_to_trend\n","0     -1yT-K3c6YI    0 days 05:29:17\n","1     -2RVw2_QyxQ    1 days 21:20:59\n","2     -2b4qSoMnKE    0 days 03:13:27\n","3     -37nIo_tLnk 2932 days 00:33:28\n","4     -7AZX5Xtiks    0 days 06:29:59\n","...           ...                ...\n","2073  zi_6oaQyckM    0 days 20:59:58\n","2074  zslYmBRhdOM    0 days 04:44:54\n","2075  zuRd_Eneuk8    1 days 05:40:17\n","2076  zxUwbflE1SY    1 days 10:59:50\n","2077  zy0b9e40tK8    4 days 14:59:53\n","\n","[2078 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-22330a34-041c-4e7a-be30-a0d2fcd05936\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>video_id</th>\n","      <th>time_to_trend</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1yT-K3c6YI</td>\n","      <td>0 days 05:29:17</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-2RVw2_QyxQ</td>\n","      <td>1 days 21:20:59</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-2b4qSoMnKE</td>\n","      <td>0 days 03:13:27</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-37nIo_tLnk</td>\n","      <td>2932 days 00:33:28</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-7AZX5Xtiks</td>\n","      <td>0 days 06:29:59</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2073</th>\n","      <td>zi_6oaQyckM</td>\n","      <td>0 days 20:59:58</td>\n","    </tr>\n","    <tr>\n","      <th>2074</th>\n","      <td>zslYmBRhdOM</td>\n","      <td>0 days 04:44:54</td>\n","    </tr>\n","    <tr>\n","      <th>2075</th>\n","      <td>zuRd_Eneuk8</td>\n","      <td>1 days 05:40:17</td>\n","    </tr>\n","    <tr>\n","      <th>2076</th>\n","      <td>zxUwbflE1SY</td>\n","      <td>1 days 10:59:50</td>\n","    </tr>\n","    <tr>\n","      <th>2077</th>\n","      <td>zy0b9e40tK8</td>\n","      <td>4 days 14:59:53</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2078 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-22330a34-041c-4e7a-be30-a0d2fcd05936')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-22330a34-041c-4e7a-be30-a0d2fcd05936 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-22330a34-041c-4e7a-be30-a0d2fcd05936');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":[],"metadata":{"id":"sta2wFl6PHBF"},"execution_count":null,"outputs":[]}]}