{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### **B√†i 1**\n","\n","Cho list d∆∞·ªõi ƒë√¢y:\n","\n","```python\n","['python', 'java', 'tableau', 'eviews', 'matlab', 'sql', 'excel', 'data', 'analytic', 'science']\n","```\n","\n","T√¨m t·∫•t c·∫£ c√°c t·ª´ c√≥ s·ªë ch·ªØ c√°i l·ªõn h∆°n 5 trong list tr√™n."],"metadata":{"id":"zNICzNaKfSev"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"Admk_8sMy1TK"},"outputs":[],"source":["data = [\n","    'python', 'java', 'tableau', 'eviews', 'matlab',\n","    'sql', 'excel', 'data', 'analytic', 'science'\n","]\n","result = []\n","for i in data:\n","    if len(i) > 5:\n","        result.append(i)\n","\n","result"]},{"cell_type":"code","source":[],"metadata":{"id":"ES_ChUdNaZwM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### **B√†i 2**\n","Vi·∫øt ch∆∞∆°ng tr√¨nh t√≠nh t·∫ßn su·∫•t xu·∫•t hi·ªán c·ªßa c√°c ph·∫ßn t·ª≠ trong list d∆∞·ªõi ƒë√¢y, s·ª≠ d·ª•ng list comprehension\n","```python\n","[100, 30, 20, 100, 30, 200, 30, 20, 50, 600, 20, 20, 100, 50, 600, -15, -10]\n","```"],"metadata":{"id":"8-4cwOLcC7Ny"}},{"cell_type":"code","source":["data = [100, 30, 20, 100, 30, 200, 30, 20, 50, 600, 20, 20, 100, 50, 600, -15, -10]\n","freq = [data.count(item) for item in data]\n","freq"],"metadata":{"id":"4_J7xNY8DFCR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1693282554364,"user_tz":-420,"elapsed":3,"user":{"displayName":"Data Chilly","userId":"00857332948930478291"}},"outputId":"40043895-8921-4be5-a362-ce29b205a7d8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[3, 3, 4, 3, 3, 1, 3, 4, 2, 2, 4, 4, 3, 2, 2, 1, 1]"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":[],"metadata":{"id":"vtTSsjZVaqRk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### **B√†i 3**\n","Cho list sau:\n","```python\n","score = [\n","    ['8A4', 'Mickey', 'math', 10],\n","    ['8A4', 'Donald', 'physic', 8.5],\n","    ['9A1', 'Minie', 'math', 7],\n","    ['9A1', 'Duckie', 'physic', 9.2]\n","]\n","```\n","\n","- T√≠nh t·ªïng ƒëi·ªÉm 2 m√¥n To√°n v√† L√Ω c·ªßa l·ªõp 8A4\n","- T√≠nh ƒëi·ªÉm trung b√¨nh m√¥n To√°n c·ªßa 2 l·ªõp\n","- B·ªï sung v√†o m·ªói list th·ª© h·∫°ng trong l·ªõp c·ªßa h·ªçc sinh, l·∫ßn l∆∞·ª£t nh∆∞ sau: 1, 5, 10, 3."],"metadata":{"id":"lqhaadWiFjPX"}},{"cell_type":"code","source":["score = [\n","    ['8A4', 'Mickey', 'math', 10],\n","    ['8A4', 'Donald', 'physic', 8.5],\n","    ['9A1', 'Minie', 'math', 7],\n","    ['9A1', 'Duckie', 'physic', 9.2]\n","]\n","\n","# task 1\n","score[0][3] + score[1][3]\n","\n","# task 2\n","(score[0][3] + score[2][3]) / 2\n","\n","# task 3\n","ranks = [1, 5, 10, 3]\n","for rank, student in zip(ranks, score):\n","    student.append(rank)"],"metadata":{"id":"miJOemm6awwq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1693965592860,"user_tz":-420,"elapsed":5,"user":{"displayName":"Data Chilly","userId":"00857332948930478291"}},"outputId":"e4c9ea3e-7517-445d-eb6b-b380a71e6320"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[['8A4', 'Mickey', 'math', 10, 1],\n"," ['8A4', 'Donald', 'physic', 8.5, 5],\n"," ['9A1', 'Minie', 'math', 7, 10],\n"," ['9A1', 'Duckie', 'physic', 9.2, 3]]"]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["### **ü•á B√†i 4** - [Fibonacci sequence](https://en.wikipedia.org/wiki/Fibonacci_sequence)\n","\n","Trong d√£y s·ªë Fibonacci, m·ªói ph·∫ßn t·ª≠ b·∫±ng t·ªïng c·ªßa 2 ph·∫ßn t·ª≠ li·ªÅn tr∆∞·ªõc.\n","\n","```python\n","x1 = 1\n","x2 = 1\n","\n","x3 = x2 + x1 = 2\n","x4 = x3 + x2 = 3\n","x5 = x4 + x3 = 8\n","...\n","```\n","\n","Cho tr∆∞·ªõc 2 ph·∫ßn t·ª≠ `fibo = [1, 1]`, h√£y d√πng `for` loop ƒë·ªÉ sinh ra 20 s·ªë ƒë·∫ßu ti√™n trong chu·ªói Fibonacci."],"metadata":{"id":"asc4h86KYlgZ"}},{"cell_type":"code","source":["# solution\n","n = 20\n","fibo = [1, 1]\n","\n","for _ in range(n-2):\n","    fibo.append(fibo[-1] + fibo[-2])\n","\n","print(fibo)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fTb5rQneYk_w","executionInfo":{"status":"ok","timestamp":1693269821206,"user_tz":-420,"elapsed":4,"user":{"displayName":"Data Chilly","userId":"00857332948930478291"}},"outputId":"4869af27-ca86-452e-929c-c9fb5e777012"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"8BM4Q19tazdD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### **B√†i 5**\n","Cho m·ªôt array 2 chi·ªÅu tu·ª≥ √Ω, h√£y:\n","- L·∫•y ra 2 d√≤ng ƒë·∫ßu ti√™n\n","- S·ª≠a gi√° tr·ªã c√°c ph·∫ßn t·ª≠ c·ªôt th·ª© 0, 2, 4 th√†nh 10\n","\n","```python\n","import numpy as np\n","np.random.seed(0)\n","arr = np.random.randint(10, size=(5,5))\n","arr\n","```"],"metadata":{"id":"L7ZDpAtrKfiX"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"U-6RoavwFwXp","outputId":"1a99ce37-fbb4-475e-c696-8060f3e5f02f"},"outputs":[{"data":{"text/plain":["array([[5, 0, 3, 3, 7],\n","       [9, 3, 5, 2, 4],\n","       [7, 6, 8, 8, 1],\n","       [6, 7, 7, 8, 1],\n","       [5, 9, 8, 9, 4]])"]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["import numpy as np\n","np.random.seed(0)\n","arr = np.random.randint(10, size=(5,5))\n","\n","# task 1\n","arr[0:2]\n","\n","# task 2\n","arr[:, ::2] =10"]},{"cell_type":"code","source":[],"metadata":{"id":"VE_H4NDTKu_n"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### **B√†i 6**\n","\n","T·∫°o vector A ng·∫´u nhi√™n k√≠ch th∆∞·ªõc b·∫±ng 50 v·ªõi c√°c ph·∫ßn t·ª≠ trong kho·∫£ng t·ª´ -20 ƒë·∫øn 20\n","\n","- T·∫°o vector ch·ª©a tr·ªã tuy·ªát ƒë·ªëi c·ªßa c√°c ph·∫ßn t·ª≠ trong vector A\n","- Chuy·ªÉn vector A th√†nh matrix c√≥ k√≠ch th∆∞·ªõc 5x10\n","- T√¨m ph·∫ßn t·ª≠ l·ªõn nh·∫•t, nh·ªè nh·∫•t c·ªßa ma tr·∫≠n A\n","- T√≠nh trung b√¨nh, trung v·ªã c·ªßa ma tr·∫≠n A, l√†m tr√≤n 2 ch·ªØ s·ªë th·∫≠p ph√¢n.\n","- C·ªông l≈©y ti·∫øn c√°c ph·∫ßn t·ª≠ trong vector A"],"metadata":{"id":"jhGyBEtWKv9G"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"U1PFkXQWFwXu","outputId":"b8f76ae0-0188-4e26-b450-ec1a1caee5b1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1693269135326,"user_tz":-420,"elapsed":6,"user":{"displayName":"Data Chilly","userId":"00857332948930478291"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-20, -37, -54, -35, -46, -47, -46, -30, -27, -41, -37, -33, -41,\n","       -60, -42, -23, -20, -16, -19,  -2,   3,  -4, -16, -27, -27, -31,\n","       -46, -51, -71, -73, -58, -54, -45, -46, -47, -53, -34, -22, -41,\n","       -52, -40, -29, -39, -36, -21, -30, -22,  -8, -28, -48])"]},"metadata":{},"execution_count":5}],"source":["import numpy as np\n","np.random.seed(0)\n","\n","A = np.random.randint(-20, 20, size=50)\n","\n","# task 1\n","np.abs(A)\n","\n","# task 2\n","A.reshape(5, 10)\n","\n","# task 3\n","A.min()\n","A.max()\n","\n","# task 4\n","A.mean().round(2)\n","np.median(A).round(2)\n","\n","# task 5\n","np.cumsum(A)"]},{"cell_type":"code","source":[],"metadata":{"id":"x1RFEDmsLEIm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### **B√†i 7**\n","\n","T·∫°o m·ªôt vector ng·∫´u nhi√™n c√≥ k√≠ch th∆∞·ªõc b·∫±ng 10 v√† thay th·∫ø ph·∫ßn t·ª≠ l·ªõn nh·∫•t b·∫±ng 0."],"metadata":{"id":"y1i4N_6SLQT4"}},{"cell_type":"code","source":["import numpy as np\n","vector = np.random.random(10)\n","vector[vector.argmax()] = 0\n","print(vector)"],"metadata":{"id":"nEUxPWMLLbSY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1693919474129,"user_tz":-420,"elapsed":541,"user":{"displayName":"Data Chilly","userId":"00857332948930478291"}},"outputId":"97de4b3d-3253-41b9-caaa-3018e97526d4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.43113079 0.64441551 0.53944519 0.70891855 0.         0.52000016\n"," 0.61733664 0.33984483 0.44071027 0.16106474]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"y1LbgoHlbbrG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### **ü•á B√†i 8**\n","C√¥ng th·ª©c Binet cho ph√©p t√¨m gi√° tr·ªã c·ªßa m·ªôt ph·∫ßn t·ª≠ b·∫•t k·ª≥ trong chu·ªói Fibonacci d·ª±a tr√™n s·ªë th·ª© t·ª± c·ªßa ph·∫ßn t·ª≠ ƒë√≥. H√£y s·ª≠ d·ª•ng c√¥ng th·ª©c Binet v√† th∆∞ vi·ªán Numpy ƒë·ªÉ t√¨m ra 50 ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n trong chu·ªói Fibonacci."],"metadata":{"id":"9QMGZnLRL1ux"}},{"cell_type":"code","source":["import numpy as np\n","\n","n = 50\n","index = np.arange(1, n+1)\n","\n","fibo = (((1 + np.sqrt(5)) / 2) ** index - ((1 - np.sqrt(5)) / 2) ** index) / np.sqrt(5)\n","fibo = fibo.astype(int)\n","fibo"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rqrdClNUuEpt","executionInfo":{"status":"ok","timestamp":1693269658726,"user_tz":-420,"elapsed":3,"user":{"displayName":"Data Chilly","userId":"00857332948930478291"}},"outputId":"5c2c46aa-aa5a-4ce4-9c2a-4506f28dad63"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([          1,           1,           2,           3,           5,\n","                 8,          13,          21,          34,          55,\n","                89,         144,         233,         377,         610,\n","               987,        1597,        2584,        4181,        6765,\n","             10946,       17711,       28657,       46368,       75025,\n","            121393,      196418,      317811,      514229,      832040,\n","           1346269,     2178309,     3524578,     5702887,     9227465,\n","          14930352,    24157817,    39088169,    63245986,   102334155,\n","         165580141,   267914296,   433494437,   701408733,  1134903170,\n","        1836311903,  2971215073,  4807526976,  7778742049, 12586269025])"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":[],"metadata":{"id":"U0iWqhiQuRgQ"},"execution_count":null,"outputs":[]}]}